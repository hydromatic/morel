(*
 * Licensed to Julian Hyde under one or more contributor license
 * agreements.  See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Julian Hyde licenses this file to you under the Apache
 * License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License.  You may obtain a
 * copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.  See the License for the specific
 * language governing permissions and limitations under the
 * License.
 *
 * Miscellaneous stuff - often test cases for bugs
 *)

(*) Bug gave 'AssertionError: op not handled: EQ'
from p in (from p in [{a=1,b=2}] where p.a = 1);
> val it = [{a=1,b=2}] : {a:int, b:int} list

(* [MOREL-250] Inliner generates invalid plan if dead code occurs in a nested
   let. *)
let
  val bind = fn x => [x]
in
  let
    val three = 1 + 2
  in
    bind "a"
  end
end;
> val it = ["a"] : string list

(*) End misc.smli
